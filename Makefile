# A simple gmake Makefile, to be used on Linux and Darwin.  It shouldn't
# be used elsewhere because it assumes that the target system doesn't
# support BSD extended file flags.
#

PREFIX?=/usr/local
FLEX?=	flex
YACC?=	yacc
OWNER?=	0
GROUP?=	0

UNAME=	$(shell uname -s)

SRCS=	attrstack.c auth.c config.c detailer.c diff.c fattr.c fixups.c \
	fnmatch.c globtree.c idcache.c keyword.c lex.rcs.c lister.c main.c \
	misc.c mux.c pathcomp.c parse.c proto.c rcsfile.c rcsparse.c \
	rsyncfile.c status.c stream.c threads.c token.c updater.c
OBJS=	$(SRCS:.c=.o)

WARNS=	-Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wpointer-arith \
	-Wreturn-type -Wcast-qual -Wwrite-strings -Wswitch -Wshadow \
	-Wcast-align -Wunused-parameter -Wchar-subscripts -Winline \
	-Wnested-externs -Wredundant-decls -Wno-format-y2k

ifdef DEBUG
CFLAGS+= -g
else
CFLAGS+= -DNDEBUG
endif

ifeq ($(UNAME), Linux)
CFLAGS+= -D_XOPEN_SOURCE -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64
endif
ifeq ($(UNAME), Darwin)
CFLAGS+= -DHAVE_FFLAGS
endif
ifeq ($(UNAME), FreeBSD)
CFLAGS+= -DHAVE_FFLAGS
endif
ifeq ($(UNAME), OpenBSD)
CFLAGS+= -DHAVE_FFLAGS
endif
ifeq ($(UNAME), NetBSD)
CFLAGS+= -DHAVE_FFLAGS
endif
ifeq ($(UNAME), DragonFlyBSD)
CFLAGS+= -DHAVE_FFLAGS
endif

CFLAGS+= -O -pipe -I$(PREFIX)/include $(WARNS)

LDFLAGS= -L$(PREFIX)/lib -lz -lpthread

ifeq ($(UNAME), FreeBSD)
LDFLAGS+= -lmd
else
LDFLAGS+= -lcrypto
endif

.PHONY: all clean install

all: csup csup.1.gz cpasswd.1.gz

csup: $(OBJS)
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

config.c: parse.h

token.c: token.l
	$(FLEX) -t $< > $@

parse.c: parse.y

parse.h: parse.c

lex.rcs.c rcstokenizer.h: rcstokenizer.l
	$(FLEX) -Prcs $<

# Disable a bunch of warnings to quiet builds for C files generated by flex.
FLEX_NOWARNS=	-Wno-redundant-decls -Wno-unused-function -Wno-sign-compare \
		-Wno-unused-parameter -Wno-missing-prototypes
token.o: token.c
	$(CC) $(CFLAGS) $(FLEX_NOWARNS) -c -o $@ $<

lex.rcs.o: lex.rcs.c
	$(CC) $(CFLAGS) $(FLEX_NOWARNS) -c -o $@ $<

csup.1.gz: csup.1

cpasswd.1.gz: cpasswd.1

%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

%.c: %.y
	$(YACC) -d -o $@ $<

%.1.gz: %.1
	gzip -cn $< > $@

clean:
	rm -f csup $(OBJS) parse.c parse.h rcstokenizer.h lex.rcs.c token.c csup.1.gz cpasswd.1.gz

install: csup csup.1.gz cpasswd.sh cpasswd.1.gz
	install -s -o $(OWNER) -g $(GROUP) csup $(PREFIX)/bin
	install -s -o $(OWNER) -g $(GROUP) cpasswd.sh $(PREFIX)/bin/cpasswd
	install -s -o $(OWNER) -g $(GROUP) csup.1.gz $(PREFIX)/share/man/man1
	install -s -o $(OWNER) -g $(GROUP) cpasswd.1.gz $(PREFIX)/share/man/man1
